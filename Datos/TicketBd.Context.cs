//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TICKETEntities : DbContext
    {
        public TICKETEntities()
            : base("name=TICKETEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<PARAMETRIZACION> PARAMETRIZACION { get; set; }
        public virtual DbSet<BITACORA_ENVIO_SWIFT_MT202> BITACORA_ENVIO_SWIFT_MT202 { get; set; }
        public virtual DbSet<REPORTE_SWIFT_MT202> REPORTE_SWIFT_MT202 { get; set; }
        public virtual DbSet<BITACORA_APERTURA> BITACORA_APERTURA { get; set; }
        public virtual DbSet<BITACORA_FECHAS_EJECUCION> BITACORA_FECHAS_EJECUCION { get; set; }
        public virtual DbSet<BITACORA_REPORTE_SWIFT_MT198> BITACORA_REPORTE_SWIFT_MT198 { get; set; }
        public virtual DbSet<COMPRA_CD> COMPRA_CD { get; set; }
        public virtual DbSet<COMPRA_TD_OVERNIGHT> COMPRA_TD_OVERNIGHT { get; set; }
        public virtual DbSet<CUENTA_EJE> CUENTA_EJE { get; set; }
        public virtual DbSet<DEPOSITO> DEPOSITO { get; set; }
        public virtual DbSet<DEPOSITO_CED> DEPOSITO_CED { get; set; }
        public virtual DbSet<DEPOSITO_PME> DEPOSITO_PME { get; set; }
        public virtual DbSet<HOLD_RETIRO> HOLD_RETIRO { get; set; }
        public virtual DbSet<INTERFACE_KAPITI_CD> INTERFACE_KAPITI_CD { get; set; }
        public virtual DbSet<OPERACION> OPERACION { get; set; }
        public virtual DbSet<OPERACION_DEFINIDA> OPERACION_DEFINIDA { get; set; }
        public virtual DbSet<OPERACION_PIU> OPERACION_PIU { get; set; }
        public virtual DbSet<OPERACION_SWIFT> OPERACION_SWIFT { get; set; }
        public virtual DbSet<PRODUCTO> PRODUCTO { get; set; }
        public virtual DbSet<PRODUCTO_CONTRATADO> PRODUCTO_CONTRATADO { get; set; }
        public virtual DbSet<REFERENCIAS> REFERENCIAS { get; set; }
        public virtual DbSet<REPORTE_SWIFT> REPORTE_SWIFT { get; set; }
        public virtual DbSet<REPORTE_SWIFT_MT103> REPORTE_SWIFT_MT103 { get; set; }
        public virtual DbSet<RETIRO_CED> RETIRO_CED { get; set; }
        public virtual DbSet<RETIRO_PME> RETIRO_PME { get; set; }
        public virtual DbSet<TIPO_CUENTA_EJE> TIPO_CUENTA_EJE { get; set; }
        public virtual DbSet<TIPO_DOCUMENTO> TIPO_DOCUMENTO { get; set; }
        public virtual DbSet<TIPO_MANTENIMIENTO_CUENTA> TIPO_MANTENIMIENTO_CUENTA { get; set; }
        public virtual DbSet<TIPO_REPORTE_SWIFT> TIPO_REPORTE_SWIFT { get; set; }
        public virtual DbSet<HOLD> HOLD { get; set; }
    
        public virtual int sp_i_InfoMT202(string fechaoperacion1, Nullable<int> agencia1, Nullable<int> agencia3)
        {
            var fechaoperacion1Parameter = fechaoperacion1 != null ?
                new ObjectParameter("fechaoperacion1", fechaoperacion1) :
                new ObjectParameter("fechaoperacion1", typeof(string));
    
            var agencia1Parameter = agencia1.HasValue ?
                new ObjectParameter("agencia1", agencia1) :
                new ObjectParameter("agencia1", typeof(int));
    
            var agencia3Parameter = agencia3.HasValue ?
                new ObjectParameter("agencia3", agencia3) :
                new ObjectParameter("agencia3", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_i_InfoMT202", fechaoperacion1Parameter, agencia1Parameter, agencia3Parameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> sp_obtiene_dia_habil(Nullable<System.DateTime> fecha, Nullable<int> dias)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("sp_obtiene_dia_habil", fechaParameter, diasParameter);
        }
    }
}
